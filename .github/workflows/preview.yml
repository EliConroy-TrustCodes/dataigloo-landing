name: Preview Deployment

on:
  pull_request:
    branches: [main, master]

jobs:
  preview:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run build
        env:
          VITE_DOMAIN: ${{ vars.DOMAIN_NAME || 'dataigloo.nz' }}
          VITE_SITE_URL: ${{ vars.SITE_URL || 'https://dataigloo.nz' }}
          VITE_CONTACT_EMAIL: ${{ vars.CONTACT_EMAIL || 'hello@dataigloo.nz' }}
          VITE_PHONE_NUMBER: ${{ vars.PHONE_NUMBER || '+64 (0) ...' }}
          VITE_LINKEDIN_URL: ${{ vars.LINKEDIN_URL || 'https://www.linkedin.com/company/dataigloo' }}
          VITE_EMAILJS_SERVICE_ID: ${{ secrets.VITE_EMAILJS_SERVICE_ID }}
          VITE_EMAILJS_TEMPLATE_ID: ${{ secrets.VITE_EMAILJS_TEMPLATE_ID }}
          VITE_EMAILJS_PUBLIC_KEY: ${{ secrets.VITE_EMAILJS_PUBLIC_KEY }}
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION || 'us-east-1' }}

      - name: Create preview bucket
        id: preview
        run: |
          PREVIEW_BUCKET="dataigloo-preview-pr-${{ github.event.number }}-$(date +%s)"
          echo "bucket=$PREVIEW_BUCKET" >> $GITHUB_OUTPUT

          # Create bucket
          aws s3 mb s3://$PREVIEW_BUCKET

          # Enable website hosting
          aws s3 website s3://$PREVIEW_BUCKET \
            --index-document index.html \
            --error-document index.html

          # Allow public access
          aws s3api put-public-access-block \
            --bucket $PREVIEW_BUCKET \
            --public-access-block-configuration "BlockPublicAcls=false,IgnorePublicAcls=false,BlockPublicPolicy=false,RestrictPublicBuckets=false"

          # Set bucket policy
          aws s3api put-bucket-policy --bucket $PREVIEW_BUCKET --policy '{
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "PublicReadGetObject",
                "Effect": "Allow",
                "Principal": "*",
                "Action": "s3:GetObject",
                "Resource": "arn:aws:s3:::'$PREVIEW_BUCKET'/*"
              }
            ]
          }'

      - name: Upload to preview bucket
        run: |
          aws s3 sync dist/ s3://${{ steps.preview.outputs.bucket }}

      - name: Get bucket region and create URL
        id: url
        run: |
          REGION=$(aws s3api get-bucket-location --bucket ${{ steps.preview.outputs.bucket }} --query 'LocationConstraint' --output text)
          if [ "$REGION" = "None" ]; then
            REGION="us-east-1"
            URL="http://${{ steps.preview.outputs.bucket }}.s3-website.amazonaws.com"
          else
            URL="http://${{ steps.preview.outputs.bucket }}.s3-website-$REGION.amazonaws.com"
          fi
          echo "url=$URL" >> $GITHUB_OUTPUT

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ **Preview Deployment Ready!**

              ðŸ“± **Preview URL:** ${{ steps.url.outputs.url }}
              ðŸª£ **S3 Bucket:** ${{ steps.preview.outputs.bucket }}

              This preview will be automatically cleaned up when the PR is closed.`
            })